---

- name: "postgres play." 
  hosts: web
  user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  
  pre_tasks:
  - name: "Set Env vars"
    shell: |
      touch .env
      echo "export DB_NAME=${DB_NAME}" >> .env
      echo "export DB_USER=${DB_USER}" >> .env
      echo "export DB_PASSWORD=${DB_PASSWORD}" >> .env
      echo "export DB_HOST=${DB_HOST}" >> .env
      echo "export DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}" >> .env
      echo "export DJANGO_DEBUG=${DJANGO_DEBUG}" >> .env
      echo "export DJANGO_TEMPLATE_DEBUG=${DJANGO_TEMPLATE_DEBUG}" >> .env
      echo "export ALLOWED_HOSTS=${ALLOWED_HOSTS}" >> .env
      echo "export ENVIRONMENT=${ENVIRONMENT}" >> .env
      echo "export FLW_SECRET_KEY=${FLW_SECRET_KEY}" >> .env
      echo "export EMAIL_HOST_USER=${EMAIL_HOST_USER}" >> .env
      echo "export EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}" >> .env
      echo "export FLUTTER_VERIFICATION_URL=${FLUTTER_VERIFICATION_URL}" >> .env
      echo "export AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}" >> .env
      echo "export AZURE_CONTAINER=${AZURE_CONTAINER}" >> .env
      echo "export AZURE_ACCOUNT_KEY=${AZURE_ACCOUNT_KEY}" >> .env
      echo "export ENERGY_BASE_URL=${ENERGY_BASE_URL}" >> .env
      echo "export GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
      echo "export FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}" >> .env

  environment:
    DB_NAME: "{{ lookup('env', 'DB_NAME')}}"
    DB_PASSWORD: "{{ lookup('env', 'DB_PASSWORD')}}"
    DB_USER: "{{ lookup('env', 'DB_USER')}}"
    DB_HOST: 5432
    
  roles:
    - configure_db
    # - configure-prometheus-node-exporter


# - name: Set up PostgreSQL
#   hosts: all
#   become: true
#   become_method: sudo
#   become_user: root


        
#   tasks:
#     - name: "Install packages"
#       shell : "sudo apt install -y python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl"

#     - name: "Create app database"
#       postgresql_db:
#         state: present
#         name: "{{ DB_NAME }}"
#       become: yes
#       become_user: postgres

#     - name: "Create db user"
#       postgresql_user:
#         state: present
#         name: "{{ DB_USER }}"
#         password: "{{ DB_PASSWORD }}"
#       become: yes
#       become_user: postgres

#     - name: "Grant db user access to app db"
#       postgresql_privs:
#         type: database
#         database: "{{ DB_NAME }}"
#         roles: "{{ DB_USER }}"
#         grant_option: no
#         privs: all
#       become: yes
#       become_user: postgres

#     - name: "Allow md5 connection for the db user"
#       postgresql_pg_hba:
#         dest: "~/data/pg_hba.conf"
#         contype: host
#         databases: all
#         method: md5
#         users: "{{ DB_USER }}"
#         create: true
#       become: yes
#       become_user: postgres
#       notify: restart postgres

#   handlers:
#     - name: restart postgres
#       service: name=postgresql state=restarted 

